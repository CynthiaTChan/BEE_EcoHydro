View(FC)
View(FC)
FCmatrix = data.frame(matrix(nrow = length (2017-1950), ncol = 0))
View(FCmatrix)
View(FCmatrix)
FCmatrix = data.frame(matrix(nrow = length (FC$flowdata$date), ncol = 0))
View(FCmatrix)
FCmatrix$Year = FC$flowdata$Year
FCmatrix$Flowdepth = FC_flow_depth
AnnualData <- data.frame(matrix(nrow = 2017-1950, ncol=0))
for (i in 1950:2016)
{
AnnualData$Precip_mm[i-1949] = sum(MetData[MetData$Year == i,7]) # precip in mm
AnnualData$Stream_mmday[i-1949] = sum(FCmatrix[FCmatrix$Year == i,2 ]) # stream depth in mm/day
}
View(AnnualData)
for (i in 1950:2016)
{
AnnualData$Year[i-1949] = i # years
AnnualData$Precip_mm[i-1949] = sum(MetData[MetData$Year == i,7]) # precip in mm
AnnualData$Stream_mmday[i-1949] = sum(FCmatrix[FCmatrix$Year == i,2 ]) # stream depth in mm/day
}
AnnualData$ET = AnnualData$Precip_mm - AnnualData$Stream_mmday
AnnualData$ETratio = AnnualData$ET / AnnualData$Precip_mm
AnnualData$ETratio = AnnualData$ET / AnnualData$Precip_mm
plot(AnnualData$Year, AnnualData$Precip_mm, type = "l", main = "Precipitation, ET, and ET ratio trends for Fall Creek from 1950 - 2016")
par(new = TRUE)
plot(AnnualData$Year, AnnualData$ET, type = "l")
par(new = TRUE)
plot(AnnualData$Year, AnnualData$ETratio, type = "l")
# Adding a legend
legend("topright", legend = c("Precipitation, ET, ET Ratio"),
col = c("cyan", "magenta", "verdant"), lty = 1, cex = 0.8)
# Adding a legend
legend("topright", legend = c("Precipitation, ET, ET Ratio"),
col = c("cyan", "magenta", "verdant"), lty = 1.2, cex = 0.8)
AnnualData$ETratio = AnnualData$ET / AnnualData$Precip_mm
plot(AnnualData$Year, AnnualData$Precip_mm, type = "l", main = "Precipitation, ET, and ET ratio trends for Fall Creek from 1950 - 2016")
par(new = TRUE)
plot(AnnualData$Year, AnnualData$ET, type = "l")
par(new = TRUE)
plot(AnnualData$Year, AnnualData$ETratio, type = "l")
# Adding a legend
legend("topright", legend = c("Precipitation, ET, ET Ratio"),
col = c("cyan", "magenta", "verdant"), lty = 1.2, cex = 0.8)
legend("topright", legend = c("Precipitation", "ET", "ET Ratio"),
col = c("cyan", "magenta", "verdant"), lty = 1.2, cex = 0.8)
AnnualData$ETratio = AnnualData$ET / AnnualData$Precip_mm
plot(AnnualData$Year, AnnualData$Precip_mm, type = "l", main = "Precipitation, ET, and ET ratio trends for Fall Creek from 1950 - 2016")
par(new = TRUE)
plot(AnnualData$Year, AnnualData$ET, type = "l")
par(new = TRUE)
plot(AnnualData$Year, AnnualData$ETratio, type = "l")
# Adding a legend
legend("topright", legend = c("Precipitation", "ET", "ET Ratio"),
col = c("cyan", "magenta", "verdant"), lty = 1.2, cex = 0.8)
AnnualData$ETratio = AnnualData$ET / AnnualData$Precip_mm
plot(AnnualData$Year, AnnualData$Precip_mm, type = "l", main = "Precipitation, ET, and ET ratio trends for Fall Creek from 1950 - 2016")
par(new = TRUE)
plot(AnnualData$Year, AnnualData$ET, type = "l")
par(new = TRUE)
plot(AnnualData$Year, AnnualData$ETratio, type = "l")
# Adding a legend
legend("topright", legend = c("Precipitation", "ET", "ET Ratio"),
col = c("cyan", "magenta", "crimson"), lty = 1.2, cex = 0.8)
AnnualData$ETratio = AnnualData$ET / AnnualData$Precip_mm
plot(AnnualData$Year, AnnualData$Precip_mm, type = "l", main = "Precipitation, ET, and ET ratio trends for Fall Creek from 1950 - 2016")
par(new = TRUE)
plot(AnnualData$Year, AnnualData$ET, type = "l")
par(new = TRUE)
plot(AnnualData$Year, AnnualData$ETratio, type = "l")
# Adding a legend
legend("topright", legend = c("Precipitation", "ET", "ET Ratio"),
col = c("cyan", "magenta", "crimson"), lty = 1.2, cex = 0.8)
AnnualData$ETratio = AnnualData$ET / AnnualData$Precip_mm
plot(AnnualData$Year, AnnualData$Precip_mm, type = "l", main = "Precipitation, ET, and ET ratio trends for Fall Creek from 1950 - 2016")
par(new = TRUE)
plot(AnnualData$Year, AnnualData$ET, type = "l")
par(new = TRUE)
plot(AnnualData$Year, AnnualData$ETratio, type = "l")
AnnualData$ETratio = AnnualData$ET / AnnualData$Precip_mm
plot(AnnualData$Year, AnnualData$Precip_mm, type = "l", main = "Precipitation, ET, and ET ratio trends for Fall Creek from 1950 - 2016")
par(new = TRUE)
plot(AnnualData$Year, AnnualData$ET, type = "l")
par(new = TRUE)
plot(AnnualData$Year, AnnualData$ETratio, type = "l")
?lm
# plot(AnnualData$Year, AnnualData$Precip_mm, type = "l", main = "Precipitation, ET, and ET ratio trends for Fall Creek from 1950 - 2016")
# par(new = TRUE)
plot(AnnualData$Year, AnnualData$ET, type = "l")
linearmodel <- abline(lm(AnnualData$Year ~ AnnualData$ET))
linearmodelET <- abline(lm(AnnualData$Year ~ AnnualData$ET))
plot(AnnualData$Year, linearmodelET)
linearmodelET <- abline(lm(AnnualData$Year ~ AnnualData$ET))
plot(AnnualData$Year, linearmodelET, type = "l")
linearmodelET <- abline(lm(AnnualData$Year ~ AnnualData$ET))
plot(AnnualData$Year, linearmodelET, type = "l")
plot(AnnualData$Year, AnnualData$ET, type = "l", xlim = c(1950,2017),
ylim = (200,600) )
abline(lm(AnnualData$ET ~ AnnualData$Year))
plot(AnnualData$Year, AnnualData$ET, type = "l", xlim = c(1950,2017),
ylim = (200,600) )
abline(lm(AnnualData$ET ~ AnnualData$Year))
plot(AnnualData$Year, AnnualData$ET, type = "l", xlim = c(1950,2017), ylim = (200,600) )
abline(lm(AnnualData$ET ~ AnnualData$Year))
plot(AnnualData$Year, AnnualData$ET, type = "l", xlim = c(1950,2017), ylim = c(200,600) )
abline(lm(AnnualData$ET ~ AnnualData$Year))
plot(AnnualData$Year, AnnualData$ET, type = "l", xlim = c(1950,2017), ylim = c(200,600),
xlab = "Year", ylab = "mm" )
abline(lm(AnnualData$ET ~ AnnualData$Year))
plot(AnnualData$Year, AnnualData$ET, type = "o", xlim = c(1950,2017), ylim = c(200,600),
xlab = "Year", ylab = "mm" )
abline(lm(AnnualData$ET ~ AnnualData$Year))
plot(AnnualData$Year, AnnualData$ET, type = "o", xlim = c(1950,2017), ylim = c(200,600),
xlab = "Year", ylab = "mm" )
abline(lm(AnnualData$ET ~ AnnualData$Year))
plot(AnnualData$Year, AnnualData$ET, xlim = c(1950,2017), ylim = c(200,600),
xlab = "Year", ylab = "mm" )
plot(AnnualData$Year, AnnualData$ET, xlim = c(1950,2017), ylim = c(200,600),
xlab = "Year", ylab = "mm" )
abline(lm(AnnualData$ET ~ AnnualData$Year))
summary(lm(AnnualData$ET ~ AnnualData$Year))
min(AnnualData$Precip_mm)
max(AnnualData$Precip_mm)
plot(AnnualData$Year, AnnualData$Precip_mm, xlim = c(1950,2017), ylim = c(500,1300),
xlab = "Year", ylab = "mm", main = "Precipitation vs time" )
abline(lm(AnnualData$Precip_mm ~ AnnualData$Year))
summary(lm(AnnualData$Precip_mm ~ AnnualData$Year))
plot(AnnualData$Year, AnnualData$ET, xlim = c(1950,2017), ylim = c(200,600),
xlab = "Year", ylab = "mm", main = "ET vs time" )
abline(lm(AnnualData$ET ~ AnnualData$Year))
summary(lm(AnnualData$ET ~ AnnualData$Year))
plot(AnnualData$Year, AnnualData$Precip_mm, xlim = c(1950,2017), ylim = c(500,1300),
xlab = "Year", ylab = "mm", main = "Precipitation vs time" )
abline(lm(AnnualData$Precip_mm ~ AnnualData$Year))
summary(lm(AnnualData$Precip_mm ~ AnnualData$Year))
plot(AnnualData$Year, AnnualData$ET, xlim = c(1950,2017), ylim = c(200,600),
xlab = "Year", ylab = "mm", main = "ET vs time in Fall Creek" )
abline(lm(AnnualData$ET ~ AnnualData$Year))
summary(lm(AnnualData$ET ~ AnnualData$Year))
plot(AnnualData$Year, AnnualData$Precip_mm, xlim = c(1950,2017), ylim = c(500,1300),
xlab = "Year", ylab = "mm", main = "Precipitation vs time in Fall Creek" )
abline(lm(AnnualData$Precip_mm ~ AnnualData$Year))
summary(lm(AnnualData$Precip_mm ~ AnnualData$Year))
plot(AnnualData$Year, AnnualData$ETratio, xlim = c(1950,2017), ylim = c(500,1300),
xlab = "Year", ylab = "mm", main = "Precipitation vs time in Fall Creek" )
abline(lm(AnnualData$ETratio ~ AnnualData$Year))
summary(lm(AnnualData$ETratio ~ AnnualData$Year))
plot(AnnualData$Year, AnnualData$ET, xlim = c(1950,2017), ylim = c(200,600),
xlab = "Year", ylab = "mm", main = "ET vs time in Fall Creek" )
abline(lm(AnnualData$ET ~ AnnualData$Year))
summary(lm(AnnualData$ET ~ AnnualData$Year))
pvalue_ET <- summary(lm(AnnualData$ET ~ AnnualData$Year))$coefficients[2,4]
pvalue_ETratio <- summary(lm(AnnualData$ETratio ~ AnnualData$Year))$coefficients[2,4]
plot(AnnualData$Year, AnnualData$ETratio, xlim = c(1950,2017), ylim = c(500,1300),
xlab = "Year", ylab = "mm", main = "Precipitation vs time in Fall Creek" )
abline(lm(AnnualData$ETratio ~ AnnualData$Year))
summary(lm(AnnualData$ETratio ~ AnnualData$Year))
plot(AnnualData$Year, AnnualData$ETratio, xlim = c(1950,2017), ylim = c(500,1300),
xlab = "Year", ylab = "mm", main = "Precipitation vs time in Fall Creek" )
abline(lm(AnnualData$ETratio ~ AnnualData$Year))
# Load "EcoHydRology" Package
library(EcoHydRology)
# Step 2: Download USGS streamflow data using the EcoHydRology package
# Fall Creek, Ithaca, NY: "04234000"
FC <- get_usgs_gage(flowgage_id = "04234000", begin_date = "1950-01-01", end_date="2016-12-31")
FC_area <- FC$area  # Area of the watershed in square kilometers
FC_flow <- FC$flowdata$flow   # Flow in cubic meters per day
FC_flow_depth <- FC_flow / FC_area / 1000 # Flow depth in mm/day
#Step 4: calculate the annual total precipitation and streamflow
MetData <- read.csv("GameFarmRd_1950-present.csv")
for (i in 1:nrow(MetData))
{
MetData$Precip_mm[i] = MetData$Precip[i]*25.4
MetData$Tmax_C[i] = 5/9*(MetData$Tmax[i]-32)
MetData$Tmin_C[i] = 5/9*(MetData$Tmin[i]-32)
}
FC$date <- FC$flowdata$date
FC$flowdata$Year = as.numeric(format(as.Date(FC$date),"%Y"))
FCmatrix = data.frame(matrix(nrow = length (FC$flowdata$date), ncol = 0))
FCmatrix$Year = FC$flowdata$Year
FCmatrix$Flowdepth = FC_flow_dept
AnnualData <- data.frame(matrix(nrow = 2017-1950, ncol=0))
for (i in 1950:2016)
{
AnnualData$Year[i-1949] = i # years
AnnualData$Precip_mm[i-1949] = sum(MetData[MetData$Year == i,7]) # precip in mm
AnnualData$Stream_mmday[i-1949] = sum(FCmatrix[FCmatrix$Year == i,2 ]) # stream depth in mm/day
}
AnnualData$ET = AnnualData$Precip_mm - AnnualData$Stream_mmday
plot(AnnualData$Year, AnnualData$ET, xlim = c(1950,2017), ylim = c(200,600),
xlab = "Year", ylab = "mm", main = "ET vs time in Fall Creek" )
abline(lm(AnnualData$ET ~ AnnualData$Year))
View(FCmatrix)
View(MetData)
View(FCmatrix)
FC$date <- FC$flowdata$date
FC$flowdata$Year = as.numeric(format(as.Date(FC$date),"%Y"))
FCmatrix = data.frame(matrix(nrow = length (FC$flowdata$date), ncol = 0))
FCmatrix$Year = FC$flowdata$Year
FCmatrix$Flowdepth = FC_flow_depth
AnnualData <- data.frame(matrix(nrow = 2017-1950, ncol=0))
for (i in 1950:2016)
{
AnnualData$Year[i-1949] = i # years
AnnualData$Precip_mm[i-1949] = sum(MetData[MetData$Year == i,7]) # precip in mm
AnnualData$Stream_mmday[i-1949] = sum(FCmatrix[FCmatrix$Year == i,2 ]) # stream depth in mm/day
}
AnnualData$ET = AnnualData$Precip_mm - AnnualData$Stream_mmday
plot(AnnualData$Year, AnnualData$ET, xlim = c(1950,2017), ylim = c(200,600),
xlab = "Year", ylab = "mm", main = "ET vs time in Fall Creek" )
abline(lm(AnnualData$ET ~ AnnualData$Year))
summary(lm(AnnualData$ET ~ AnnualData$Year))
pvalue_ET <- summary(lm(AnnualData$ET ~ AnnualData$Year))$coefficients[2,4]
plot(AnnualData$Year, AnnualData$Precip_mm, xlim = c(1950,2017), ylim = c(500,1300),
xlab = "Year", ylab = "mm", main = "Precipitation vs time in Fall Creek" )
abline(lm(AnnualData$Precip_mm ~ AnnualData$Year))
summary(lm(AnnualData$Precip_mm ~ AnnualData$Year))
pvalue_precip <- summary(lm(AnnualData$Precip_mm ~ AnnualData$Year))$coefficients[2,4]
plot(AnnualData$Year, AnnualData$ETratio, xlim = c(1950,2017), ylim = c(0,1),
xlab = "Year", ylab = "mm", main = "Precipitation vs time in Fall Creek" )
abline(lm(AnnualData$ETratio ~ AnnualData$Year))
summary(lm(AnnualData$ETratio ~ AnnualData$Year))
pvalue_ETratio <- summary(lm(AnnualData$ETratio ~ AnnualData$Year))$coefficients[2,4]
plot.new()
plot(AnnualData$Year, AnnualData$ETratio, xlim = c(1950,2017), ylim = c(0,1),
xlab = "Year", ylab = "mm", main = "ET/P vs time in Fall Creek" )
abline(lm(AnnualData$ETratio ~ AnnualData$Year))
summary(lm(AnnualData$ETratio ~ AnnualData$Year))
pvalue_ETratio <- summary(lm(AnnualData$ETratio ~ AnnualData$Year))$coefficients[2,4]
AnnualData$ETratio = AnnualData$ET/AnnualData$Precip_mm
plot.new()
plot(AnnualData$Year, AnnualData$ETratio, xlim = c(1950,2017), ylim = c(0,1),
xlab = "Year", ylab = "mm", main = "ET/P vs time in Fall Creek" )
abline(lm(AnnualData$ETratio ~ AnnualData$Year))
summary(lm(AnnualData$ETratio ~ AnnualData$Year))
pvalue_ETratio <- summary(lm(AnnualData$ETratio ~ AnnualData$Year))$coefficients[2,4]
NM <- get_usgs_gage(flowgage_id = "08330000", begin_date = "1950-01-01", end_date="2016-12-31")
View(NM)
NMflow = NM$flowdata
View(NMflow)
NM <- get_usgs_gage(flowgage_id = "08330000", begin_date = "1950-01-01", end_date="2016-12-31")
# Step 3: Find the size of the watershed for a USGS Streamgage, Convert streamflow to mm / day
# Tip: get_usgs_gage function returns area in square kilometers.
NM_area <- NM$area  # Area of the watershed in square kilometers
NM_flow <- NM$flowdata$flow   # Flow in cubic meters per day
NM_flow_depth <- NM_flow / NM_area / 1000 # Flow depth in mm/day
#Step 4: calculate the annual total precipitation and streamflow
AlbPRCP <- read.csv("AlbPrcp.csv")
View(AlbPRCP)
View(AlbPRCP)
for (i in 1:nrow(AnnualAlbPRCP))
{
AnnualAlbPRCP$Precip_mm[i] = AnnualAlbPRCP$PRCP[i]*25.4
}
#Step 4: calculate the annual total precipitation and streamflow
AnnualAlbPRCP <- read.csv("AlbPrcp.csv")
for (i in 1:nrow(AnnualAlbPRCP))
{
AnnualAlbPRCP$Precip_mm[i] = AnnualAlbPRCP$PRCP[i]*25.4
}
NM <- get_usgs_gage(flowgage_id = "08330000", begin_date = "1950-01-01", end_date="2016-12-31")
# Step 3: Find the size of the watershed for a USGS Streamgage, Convert streamflow to mm / day
# Tip: get_usgs_gage function returns area in square kilometers.
NM_area <- NM$area  # Area of the watershed in square kilometers
NM_flow <- NM$flowdata$flow   # Flow in cubic meters per day
NM_flow_depth <- NM_flow / NM_area / 1000 # Flow depth in mm/day
#Step 4: calculate the annual total precipitation and streamflow
AnnualAlbPRCP <- read.csv("AlbPrcp.csv")
#Convert Precip and Temp to SI units, from (in -> cm) and (F -> C)
#Note, this is not a vector operation
for (i in 1:nrow(AnnualAlbPRCP))
{
AnnualAlbPRCP$Precip_mm[i] = AnnualAlbPRCP$PRCP[i]*25.4
}
View(AnnualAlbPRCP)
# Get all annual data! Let's put the flow into the AnnualAlbPRCP matrix
# Generate the annual precipitation and stream flow from the daily values
NM_flow_matrix_daily$Flow_depth_mmday <- NM_flow_depth
NM_daily_flow <- NM$flowdata
View(NM_daily_flow)
NM_daily_flow <- data.frame(matrix(nrow = length(NM$flowdata$flow), ncol = 0))
# Step 3: Find the size of the watershed for a USGS Streamgage, Convert streamflow to mm / day
# Tip: get_usgs_gage function returns area in square kilometers.
NM_area <- NM$area  # Area of the watershed in square kilometers
NM_flow <- NM$flowdata$flow   # Flow in cubic meters per day
NM_daily_flow$Flow_depth_mmday <- NM_flow / NM_area / 1000 # Flow depth in mm/day
#Step 4: calculate the annual total precipitation and streamflow
AnnualAlbPRCP <- read.csv("AlbPrcp.csv")
#Convert Precip and Temp to SI units, from (in -> cm) and (F -> C)
#Note, this is not a vector operation
for (i in 1:nrow(AnnualAlbPRCP))
{
AnnualAlbPRCP$Precip_mm[i] = AnnualAlbPRCP$PRCP[i]*25.4
}
View(NM_daily_flow)
# Step 3: Find the size of the watershed for a USGS Streamgage, Convert streamflow to mm / day
# Tip: get_usgs_gage function returns area in square kilometers.
NM_daily_flow$Date <- NM$flowdata$date
NM_daily_flow$Year = as.numeric(format(as.Date(NM_daily_flow$Date),"%Y"))
View(NM_daily_flow)
View(NM_daily_flow)
NM <- get_usgs_gage(flowgage_id = "08330000", begin_date = "1950-01-01", end_date="2016-12-31")
# Create an empty matrix to add daily flows and do year conversions
NM_daily_flow <- data.frame(matrix(nrow = length(NM$flowdata$flow), ncol = 0))
NM_daily_flow$Date <- NM$flowdata$date
NM_daily_flow$Year = as.numeric(format(as.Date(NM_daily_flow$Date),"%Y"))
# Step 3: Find the size of the watershed for a USGS Streamgage, Convert streamflow to mm / day
# Tip: get_usgs_gage function returns area in square kilometers.
NM_area <- NM$area  # Area of the watershed in square kilometers
NM_flow <- NM$flowdata$flow   # Flow in cubic meters per day
NM_daily_flow$Flow_depth_mmday <- NM_flow / NM_area / 1000 # Flow depth in mm/day
#Step 4: calculate the annual total precipitation and streamflow
AnnualAlbPRCP <- read.csv("AlbPrcp.csv")
#Convert Precip and Temp to SI units, from (in -> cm) and (F -> C)
#Note, this is not a vector operation
for (i in 1:nrow(AnnualAlbPRCP))
{
AnnualAlbPRCP$Precip_mm[i] = AnnualAlbPRCP$PRCP[i]*25.4
}
View(NM_daily_flow)
for (i in 1950:2016)
{
AnnualAlbPRCP$Stream_mmyear[i-1949] = sum(NM_daily_flow[NM_daily_flow$Year == i,3 ]) # stream depth in mm/year
}
View(AnnualAlbPRCP)
AnnualAlbPRCP$ET = AnnualAlbPRCP$Precip_mm - AnnualAlbPRCP$Stream_mmday
AnnualAlbPRCP$ET = AnnualAlbPRCP$Precip_mm - AnnualAlbPRCP$Stream_mmyear
AnnualAlbPRCP$ETratio = AnnualAlbPRCP$ET/AnnualAlbPRCP$Precip_mm
View(AnnualAlbPRCP)
View(AnnualAlbPRCP)
View(AnnualAlbPRCP)
min(AnnualAlbPRCP$Precip_mm)
max(AnnualAlbPRCP$Precip_mm)
min(AnnualAlbPRCP$ET)
max(AnnualAlbPRCP$ET)
plot.new()
plot(AnnualAlbPRCP$Year, AnnualAlbPRCP$ET, xlim = c(1950,2017), ylim = c(100,325),
xlab = "Year", ylab = "mm", main = "ET vs time in ALbuquerque" )
abline(lm(AnnualAlbPRCP$ET ~ AnnualAlbPRCP$Year))
summary(lm(AnnualAlbPRCP$ET ~ AnnualAlbPRCP$Year))
NM_pvalue_ET <- summary(lm(AnnualAlbPRCP$ET ~ AnnualAlbPRCP$Year))$coefficients[2,4]
plot.new()
plot(AnnualAlbPRCP$DATE, AnnualAlbPRCP$ET, xlim = c(1950,2017), ylim = c(100,325),
xlab = "Year", ylab = "mm", main = "ET vs time in ALbuquerque" )
abline(lm(AnnualAlbPRCP$ET ~ AnnualAlbPRCP$DATE))
summary(lm(AnnualAlbPRCP$ET ~ AnnualAlbPRCP$DATE))
NM_pvalue_ET <- summary(lm(AnnualAlbPRCP$ET ~ AnnualAlbPRCP$DATE))$coefficients[2,4]
plot.new()
plot(AnnualAlbPRCP$DATE, AnnualAlbPRCP$Precip_mm, xlim = c(1950,2017), ylim = c(100,350),
xlab = "Year", ylab = "mm", main = "Precip vs time in Albuquerque" )
abline(lm(AnnualAlbPRCP$Precip_mm ~ AnnualAlbPRCP$DATE))
summary(lm(AnnualAlbPRCP$Precip_mm ~ AnnualAlbPRCP$DATE))
NM_pvalue_Precip <- summary(lm(AnnualAlbPRCP$Precip_mm ~ AnnualAlbPRCP$DATE))$coefficients[2,4]
plot.new()
plot(AnnualAlbPRCP$DATE, AnnualAlbPRCP$ETratio, xlim = c(1950,2017), ylim = c(0,1),
xlab = "Year", ylab = "mm", main = "ET vs time in Albuquerque" )
abline(lm(AnnualAlbPRCP$ETratio ~ AnnualAlbPRCP$DATE))
summary(lm(AnnualAlbPRCP$ETratio ~ AnnualAlbPRCP$DATE))
NM_pvalue_ET <- summary(lm(AnnualAlbPRCP$ETratio ~ AnnualAlbPRCP$DATE))$coefficients[2,4]
min(AnnualAlbPRCP$ETratio)
plot.new()
plot(AnnualAlbPRCP$DATE, AnnualAlbPRCP$ETratio, xlim = c(1950,2017), ylim = c(0.6,1),
xlab = "Year", ylab = "mm", main = "ET vs time in Albuquerque" )
abline(lm(AnnualAlbPRCP$ETratio ~ AnnualAlbPRCP$DATE))
summary(lm(AnnualAlbPRCP$ETratio ~ AnnualAlbPRCP$DATE))
NM_pvalue_ET <- summary(lm(AnnualAlbPRCP$ETratio ~ AnnualAlbPRCP$DATE))$coefficients[2,4]
plot(AnnualAlbPRCP$DATE, AnnualAlbPRCP$ETratio, xlim = c(1950,2017), ylim = c(0.6,1),
xlab = "Year", ylab = "mm", main = "ET ratio vs time in Albuquerque" )
WSR <- get_usgs_gage(flowgage_id = "14123500", begin_date = "1990-01-01", end_date="2016-12-31")
WSRflow <- WSR$flowdata$flow/(24*3600)      # m^3/s / (hr/day * 3600 s/hr)
?BaseflowSeparation #use this command to read more about the function
#   Hint: You will need to select the exact column ("flow") in the data frame
#   ("flowdata") inside the list generated in Step 1.
bfs = BaseflowSeparation(WSRflow, filter_parameter = 0.925, passes = 3)
# Step 3: Plot streamflow and baseflow separation
#   Hint use plot(), lines(), and legend()
plot(as.Date(WSR$flowdata$date), WSRflow, type = "l", ylab = "Flow (m^3/s)", xlab = "Date")
lines(as.Date(WSR$flowdata$date), bfs[,1], type = "l", col = "yellow")
bfs$Date = WSR$flowdata$date
bfs$Year = as.numeric(format(as.Date(bfs$Date),"%Y"))
bfs$Total = bfs$bt + bfs$qft
BF_Annual = matrix(ncol = 2017-1990, nrow = 3) #  rows are: year, bf, streamflow
for (year in 1990:2016)
{
BF_Annual[1,year - 1989] = year # Years
BF_Annual[2,year - 1989] = sum(bfs[bfs$Year == year,1]) # baseflow in m^3
BF_Annual[3,year - 1989] = sum(bfs[bfs$Year == year,5]) # total streamflow
}
rownames(BF_Annual) = c("year","BF","Runoff")
matrix = BF_Annual[-1,]
colnames(matrix) <- BF_Annual[1,]
barplot(matrix, horiz = FALSE, legend=c("baseflow","runoff"), col=c("darkblue","red"))
# Flashiness Index --------------------------------------------------------
# Refer to Baker et al., 2004 (doi:10.1111/j.1752-1688.2004.tb01046.x) and
# calculate the flashiness index with your dataset.
# need to calc for a daily value
#Hint: You'll need to create a loop to calculate the numerator and denominator.
#Hint: Use the abs() function.
numsum = 0
densum = 0
for (i in 2:length(WSRflow))
{
num <- abs(WSRflow[i] - WSRflow[i-1])
den <- WSRflow[i]
numsum <- numsum + num
densum <- densum + den
}
RB = numsum/densum
print(RB)
View(bfs)
View(matrix)
barplot(matrix, horiz = FALSE, legend=c("baseflow","runoff"), col=c("darkblue","red"))
# Step 3: Plot streamflow and baseflow separation
#   Hint use plot(), lines(), and legend()
plot(as.Date(WSR$flowdata$date), WSRflow, type = "l", ylab = "Flow (m^3/s)", xlab = "Date")
lines(as.Date(WSR$flowdata$date), bfs[,1], type = "l", col = "yellow")
lines(as.Date(WSR$flowdata$date), bfs[,1], type = "l", col = "green")
lines(as.Date(WSR$flowdata$date), bfs[,1], type = "l", col = "dark green")
plot(as.Date(WSR$flowdata$date), WSRflow, type = "l", ylab = "Flow (cms)", xlab = "Date")
lines(as.Date(WSR$flowdata$date), bfs[,1], type = "l", col = "dark green", legend=c("s","b"))
View(bfs)
WSR <- get_usgs_gage(flowgage_id = "14123500", begin_date = "1990-01-01", end_date="2016-12-31")
WSRflow <- WSR$flowdata$flow/(24*3600)
for (i in 2:length(WSRflow))
{
num <- abs(WSRflow[i] - WSRflow[i-1])
den <- WSRflow[i]
print(numsum[2])
numsum <- numsum + num
densum <- densum + den
}
for (i in 2:length(WSRflow))
{
num <- abs(WSRflow[i] - WSRflow[i-1])
den <- WSRflow[i]
print(numsum[i == 2])
numsum <- numsum + num
densum <- densum + den
}
print(WSRflow)
# Install (if you didn't do this last class) and load "EcoHydRology"
#install.packages("EcoHydRology") # Only needs to be done once on your computer
library(EcoHydRology) #Needs to be done in every new session
# Install (if you didn't do this last class) and load "EcoHydRology"
#install.packages("EcoHydRology") # Only needs to be done once on your computer
library(EcoHydRology) #Needs to be done in every new session
WSR <- get_usgs_gage(flowgage_id = "14123500", begin_date = "1990-01-01", end_date="2016-12-31")
WSRflow <- WSR$flowdata$flow/(24*3600)      # m^3/s / (hr/day * 3600 s/hr)
#   Hint: You will need to select the exact column ("flow") in the data frame
#   ("flowdata") inside the list generated in Step 1.
bfs = BaseflowSeparation(WSRflow, filter_parameter = 0.925, passes = 3)     # m^3/s
# Step 3: Plot streamflow and baseflow separation
#   Hint use plot(), lines(), and legend()
plot(as.Date(WSR$flowdata$date), WSRflow, type = "l", ylab = "Flow (cms)", xlab = "Date")
lines(as.Date(WSR$flowdata$date), bfs[,1], type = "l", col = "dark green")
# Bar plot
barplot(matrix, horiz = FALSE, legend=c("baseflow","streamflow"), col=c("darkblue","red"))
numsum = 0
densum = 0
for (i in 2:length(WSRflow))
{
num <- abs(WSRflow[i] - WSRflow[i-1])
den <- WSRflow[i]
numsum <- numsum + num
densum <- densum + den
}
#Flashiness index value
RB = numsum/densum
print(RB)
plot.new()
plot(AnnualAlbPRCP$DATE, AnnualAlbPRCP$ET, xlim = c(1950,2017), ylim = c(100,325),
xlab = "Year", ylab = "mm", main = "ET vs time in Albuquerque" )
abline(lm(AnnualAlbPRCP$ET ~ AnnualAlbPRCP$DATE))
summary(lm(AnnualAlbPRCP$ET ~ AnnualAlbPRCP$DATE))
NM_pvalue_ET <- summary(lm(AnnualAlbPRCP$ET ~ AnnualAlbPRCP$DATE))$coefficients[2,4]
plot.new()
plot(AnnualAlbPRCP$DATE, AnnualAlbPRCP$Precip_mm, xlim = c(1950,2017), ylim = c(100,350),
xlab = "Year", ylab = "mm", main = "Precip vs time in Albuquerque" )
abline(lm(AnnualAlbPRCP$Precip_mm ~ AnnualAlbPRCP$DATE))
summary(lm(AnnualAlbPRCP$Precip_mm ~ AnnualAlbPRCP$DATE))
NM_pvalue_Precip <- summary(lm(AnnualAlbPRCP$Precip_mm ~ AnnualAlbPRCP$DATE))$coefficients[2,4]
plot.new()
plot(AnnualAlbPRCP$DATE, AnnualAlbPRCP$ETratio, xlim = c(1950,2017), ylim = c(0.6,1),
xlab = "Year", ylab = "mm", main = "ET ratio vs time in Albuquerque" )
abline(lm(AnnualAlbPRCP$ETratio ~ AnnualAlbPRCP$DATE))
summary(lm(AnnualAlbPRCP$ETratio ~ AnnualAlbPRCP$DATE))
NM_pvalue_ET <- summary(lm(AnnualAlbPRCP$ETratio ~ AnnualAlbPRCP$DATE))$coefficients[2,4]
#Step 8.5: Fit a linear model to the data with x=year and y=ET/P
#Is there a significant trend?
#hint: ?lm
plot.new()
plot(AnnualAlbPRCP$DATE, AnnualAlbPRCP$ETratio, xlim = c(1950,2017), ylim = c(0.6,1),
xlab = "Year", main = "ET ratio vs time in Albuquerque" )
abline(lm(AnnualAlbPRCP$ETratio ~ AnnualAlbPRCP$DATE))
summary(lm(AnnualAlbPRCP$ETratio ~ AnnualAlbPRCP$DATE))
NM_pvalue_ET <- summary(lm(AnnualAlbPRCP$ETratio ~ AnnualAlbPRCP$DATE))$coefficients[2,4]
# The p-value is 0.9262,
plot.new()
plot(AnnualAlbPRCP$DATE, AnnualAlbPRCP$ETratio, xlim = c(1950,2017), ylim = c(0.6,1),
xlab = "Year", ylab = "" main = "ET ratio vs time in Albuquerque" )
abline(lm(AnnualAlbPRCP$ETratio ~ AnnualAlbPRCP$DATE))
summary(lm(AnnualAlbPRCP$ETratio ~ AnnualAlbPRCP$DATE))
NM_pvalue_ET <- summary(lm(AnnualAlbPRCP$ETratio ~ AnnualAlbPRCP$DATE))$coefficients[2,4]
# The p-value is 0.9262, this is not statistically significant given our threshold 0.1.
plot.new()
plot(AnnualAlbPRCP$DATE, AnnualAlbPRCP$ETratio, xlim = c(1950,2017), ylim = c(0.6,1),
xlab = "Year", ylab = "" ,main = "ET ratio vs time in Albuquerque" )
abline(lm(AnnualAlbPRCP$ETratio ~ AnnualAlbPRCP$DATE))
summary(lm(AnnualAlbPRCP$ETratio ~ AnnualAlbPRCP$DATE))
NM_pvalue_ET <- summary(lm(AnnualAlbPRCP$ETratio ~ AnnualAlbPRCP$DATE))$coefficients[2,4]
# The p-value is 0.9262, this is not statistically significant given our threshold 0.1.
